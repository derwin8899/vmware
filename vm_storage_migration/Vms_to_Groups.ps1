<####################################################################################### 
ScriptName:                      Vms_to_Groups.ps1 
Description:                     Reads csv file generated by VMDiskUsageReport.ps1 and groups servers that will fit into a 2TB LUN
				 				 .csv file list of servers needs to be provided. .csv report will be created with grouped VMs
Author:                          DJE
Date Created:                    02/15/2014
Reveiwer:                        
Usage :                          Vms_to_Groups.ps1 -csvfile <path to .csv file generated from VMDiskUsageReport.ps1>
Example:                         Vms_to_Groups.ps1 -csvfile C:\temp\phx1npcse01.csv
Requirements:                    Script must be run in powercli session with user permissions to vcenter server
########################################################################################>

PARAM($csvfile)

Test-Path $csvfile -ErrorAction Stop | Out-Null

# Set output file details
$outfilepath = ".\"
$outfilename = ($csvfile + "_Groups" + ".csv")

$input = $csvfile
$output = ($outfilepath + $outfilename)

# Set maximum storage amount for the group in gigabytes
$maxStorage = 1850

# Create output file if does not exist
if (!(Test-Path $output)) {
    New-Item $output -type file
}
# Create report
echo "Name,Storage,Tier,Group" > $output
$groupNo = 1
$groupStorage = 0
Import-Csv $input | % {
    $currServerStorage = $_.Storage
    if ($groupStorage + $currServerStorage -ge $maxStorage) {
        $groupNo ++
        $groupStorage = 0
    } 
    echo "$($_.Name),$($_.Storage),$($_.Tier),Group$groupNo" >> $output 
    $groupStorage += $currServerStorage
}

Write-Host ("Finished. Check " + $outfilepath + $outfilename) -ForegroundColor Yellow
